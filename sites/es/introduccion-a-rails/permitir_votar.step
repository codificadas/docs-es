goals {
  message "Ahora vamos a añadir un botón para que la gente pueda dar votar un tema."
}

steps {

  step "Añadir una nueva acción de controlador para votar" do
    message "Edita `app/controllers/topics_controller.rb` y añade un método como este:"

    source_code :ruby, <<-RUBY
      def upvote
        @topic = Topic.find(params[:id])
        @topic.votes.create
        redirect_to(topics_path)
      end
    RUBY


    message <<-MARKDOWN
      * `@topic = Topic.find(params[:id])` encuentra el tema en la base de datos que tiene ese id y lo almacena en la variable `@tema`.
      * `@topic.votes.create` crea un nuevo voto para el tema actual y lo guarda en la base de datos.
      * `redirect_to(topics_path)` le indica al navegador que regrese a la ruta `topics_path` (la lista de temas).
    MARKDOWN
  end

  step "Añadir una nueva ruta para votar" do
    message "Abre `config/routes.rb` y encuentra la sección que se ve algo así:"
    source_code :ruby, <<-RUBY
      resources :topics
    RUBY

    message "Reemplaza esa línea para que se vea así:"
    source_code :ruby, <<-RUBY
      resources :topics do
        member do
          post 'upvote'
        end
      end
    RUBY


    message <<-MARKDOWN
      Verifica que la ruta ha sido añadida correctamente revisando la salida de `rake routes` o [http://localhost:3000/rails/info](http://localhost:3000/rails/info). Deberías poder ver una línea que dice algo así:

      ```
            Prefix Verb   URI Pattern                  Controller#Action
      upvote_topic POST   /topics/:id/upvote(.:format) topics#upvote
      ```
    MARKDOWN
  end

  step "Añadir el botón para votar a la vista" do

    message "Edita `app/views/topics/index.html.erb` de tal forma que el ciclo que está al fondo se vea algo así:"

    source_code :erb, <<-HTML
      <% @topics.each do |topic| %>
        <tr>
          <td><%= topic.title %></td>
          <td><%= topic.description %></td>
          <td><%= pluralize(topic.votes.count, "vote") %></td>
          <td><%= button_to '+1', upvote_topic_path(topic), method: :post %></td>
          <td><%= link_to 'Show', topic %></td>
          <td><%= link_to 'Edit', edit_topic_path(topic) %></td>
          <td><%= link_to 'Destroy', topic, method: :delete, data: { confirm: 'Are you sure?' } %></td>
        </tr>
      <% end %>
    HTML

    message <<-MARKDOWN
      * `pluralize(topic.votes.count, "vote")` muestra el número de votos que tiene el tema `topic`, más la palabra 'vote' o 'votes', según sea necesario.
      * `button_to '+1'` crea un botón html con el texto '+1'.
      * `topic_upvote_path(topic)` crea la URL apropiada para la acción que queremos invocar. En este caso, queremos sumar un voto más al tema actual.
        * `topic_upvote_path(topic)` regresará `/topics/42/upvote` (si `topic.id` es igual a 42)
      * `method: :post` se asegura de que usamos la acción 'create' de CRUD, no la acción 'read'.
    MARKDOWN
  end

  step "Confirma los cambios en el navegador" do
    message "Regresa a <http://localhost:3000/topics> y revisa que todo este bien."
    message "A propósito, no necesitas reiniciar el servidor para poder apreciar estos cambios. ¿Conveniente, no?"
  end
}

insert 'considerar_lanzar_a_heroku'

next_step "redirigir_a_la_lista_de_temas_despues_de_crear_uno"
